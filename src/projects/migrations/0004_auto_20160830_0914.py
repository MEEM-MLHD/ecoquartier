# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-30 09:14
from __future__ import unicode_literals

from django.db import migrations


def transfer(apps, schema_editor):
    Project = apps.get_model("projects", "Project")

    Statut = apps.get_model("projects", "Statut")
    ZonageINSEE = apps.get_model("projects", "ZonageINSEE")
    Commune = apps.get_model("projects", "Commune")
    Departement = apps.get_model("projects", "Departement")
    Region = apps.get_model("projects", "Region")
    ContexteCommune = apps.get_model("projects", "ContexteCommune")
    TypeOperation = apps.get_model("projects", "TypeOperation")
    Vocation = apps.get_model("projects", "Vocation")
    LabelEcoQuartier = apps.get_model("projects", "LabelEcoQuartier")
    Procedure = apps.get_model("projects", "Procedure")

    projects = Project.objects.all()
    for project in projects:
        # create fk
        if project.statut is not '':
            statut, created = Statut.objects.get_or_create(label=project.statut)
            project.statut_link = statut

        if project.zonage_insee is not '':
            zonage_insee, created = ZonageINSEE.objects.get_or_create(label=project.zonage_insee)
            project.zonage_insee_link = zonage_insee

        if project.commune is not '':
            commune, created = Commune.objects.get_or_create(label=project.commune)
            project.commune_link = commune

        if project.departement is not '':
            departement, created = Departement.objects.get_or_create(label=project.departement)
            project.departement_link = departement

        if project.region is not '':
            region, created = Region.objects.get_or_create(label=project.region)
            project.region_link = region

        if project.contexte_commune is not '':
            contexte_commune, created = ContexteCommune.objects.get_or_create(label=project.contexte_commune)
            project.contexte_commune_link = contexte_commune

        if project.type_operation is not '':
            type_operation, created = TypeOperation.objects.get_or_create(label=project.type_operation)
            project.type_operation_link = type_operation

        if project.vocation is not '':
            vocation, created = Vocation.objects.get_or_create(label=project.vocation)
            project.vocation_link = vocation

        if project.label_ecoquartier is not '':
            label_ecoquartier, created = LabelEcoQuartier.objects.get_or_create(label=project.label_ecoquartier)
            project.label_ecoquartier_link = label_ecoquartier

        if project.procedure is not '':
            procedure, created = Procedure.objects.get_or_create(label=project.procedure)
            project.procedure_link = procedure

        project.save()


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0003_auto_20160830_0912'),
    ]

    operations = [
    	migrations.RunPython(transfer, reverse_func),
    ]

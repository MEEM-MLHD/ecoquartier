# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-10-07 12:49
from __future__ import unicode_literals

import re

from django.db import migrations
from django.contrib.auth.hashers import make_password


def get_user(User, mail):
    try:
        user = User.objects.get(username=mail, email=mail)
    except User.DoesNotExist:
        user = User(username=mail, email=mail)
        user.save()
    user.password = make_password(mail)
    user.save()
    return user


def mails(apps, schema_editor):
    Project = apps.get_model("projects", "Project")
    User = apps.get_registered_model('auth', 'User')
    projects = Project.objects.all()
    default_user = get_user(User, "test@test.com")
    for project in projects:
        match = re.findall(r'[\w\.-]+@[\w\.-]+', project.contact)
        if len(match) == 0:
            project.owner = default_user
        elif len(match) == 1:
            project.owner = get_user(User, match[0])
        else:
            project.owner = get_user(User, match.pop(0))
            listMail = [get_user(User, mail) for mail in match]
            print listMail
            project.editors.add(*listMail)
        project.save()

    #print projects.glm


def reverse_func(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0062_auto_20161007_1249'),
    ]

    operations = [
        migrations.RunPython(mails, reverse_func),
    ]
